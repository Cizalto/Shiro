{"ast":null,"code":"import io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nlet token;\nlet socket;\nlet host = \"192.168.1.10:8000\"; //local host\n// console.log(socket.id);\n\nfunction join(username, room) {\n  console.info(\"-- Joining --\");\n  token = 'anon';\n  socket = io('', {\n    query: {\n      token: token\n    },\n    autoConnect: false\n  });\n  socket.once(\"success\", () => {\n    console.log(\"-- Connection successful --\");\n  });\n  socket.open();\n  socket.emit('join', username, room);\n}\n\nfunction joinWithAuth(username, password, room) {\n  if (username === \"\" || password === \"\") {\n    window.alert(\"You can't try to connect with an empty name or password\");\n  } else {\n    console.info(\"-- Joining --\");\n    token = CryptoJS.SHA256(username + password);\n    socket = io('192.168.1.10:8000', {\n      query: {\n        token: token\n      },\n      autoConnect: false\n    });\n    socket.open();\n    socket.token = token;\n  }\n}\n\nexport { socket, join, joinWithAuth };","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/API/Api.js"],"names":["io","CryptoJS","token","socket","host","join","username","room","console","info","query","autoConnect","once","log","open","emit","joinWithAuth","password","window","alert","SHA256"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,IAAIC,KAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,IAAI,GAAG,mBAAX,C,CAGA;AACA;;AAEA,SAASC,IAAT,CAAcC,QAAd,EAAwBC,IAAxB,EAA6B;AACrBC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACAP,EAAAA,KAAK,GAAG,MAAR;AACAC,EAAAA,MAAM,GAAGH,EAAE,CAAC,EAAD,EAAK;AAAEU,IAAAA,KAAK,EAAE;AAAER,MAAAA,KAAK,EAAEA;AAAT,KAAT;AAA2BS,IAAAA,WAAW,EAAE;AAAxC,GAAL,CAAX;AACAR,EAAAA,MAAM,CAACS,IAAP,CAAY,SAAZ,EAAuB,MAAM;AAACJ,IAAAA,OAAO,CAACK,GAAR,CAAY,6BAAZ;AAA2C,GAAzE;AACAV,EAAAA,MAAM,CAACW,IAAP;AACAX,EAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAmBT,QAAnB,EAA6BC,IAA7B;AAEP;;AAED,SAASS,YAAT,CAAsBV,QAAtB,EAAgCW,QAAhC,EAA0CV,IAA1C,EAA+C;AACvC,MAAID,QAAQ,KAAK,EAAb,IAAmBW,QAAQ,KAAK,EAApC,EAAwC;AAChCC,IAAAA,MAAM,CAACC,KAAP,CAAa,yDAAb;AACP,GAFD,MAEK;AACGX,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACAP,IAAAA,KAAK,GAAGD,QAAQ,CAACmB,MAAT,CAAgBd,QAAQ,GAACW,QAAzB,CAAR;AACAd,IAAAA,MAAM,GAAGH,EAAE,CAAC,mBAAD,EAAsB;AAAEU,MAAAA,KAAK,EAAE;AAAER,QAAAA,KAAK,EAAEA;AAAT,OAAT;AAA2BS,MAAAA,WAAW,EAAE;AAAxC,KAAtB,CAAX;AACAR,IAAAA,MAAM,CAACW,IAAP;AACAX,IAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACP;AACR;;AAID,SAASC,MAAT,EAAgBE,IAAhB,EAAqBW,YAArB","sourcesContent":["import io from 'socket.io-client';\r\nimport CryptoJS from 'crypto-js'\r\nlet token;\r\nlet socket;\r\nlet host = \"192.168.1.10:8000\";\r\n\r\n        \r\n//local host\r\n// console.log(socket.id);\r\n\r\nfunction join(username, room){\r\n        console.info(\"-- Joining --\");\r\n        token = 'anon'\r\n        socket = io('', { query: { token: token }, autoConnect: false  });\r\n        socket.once(\"success\", () => {console.log(\"-- Connection successful --\")})\r\n        socket.open()\r\n        socket.emit('join',username, room)\r\n\r\n}\r\n\r\nfunction joinWithAuth(username, password, room){\r\n        if (username === \"\" || password === \"\") {\r\n                window.alert(\"You can't try to connect with an empty name or password\")\r\n        }else{\r\n                console.info(\"-- Joining --\");\r\n                token = CryptoJS.SHA256(username+password)\r\n                socket = io('192.168.1.10:8000', { query: { token: token }, autoConnect: false  });\r\n                socket.open()\r\n                socket.token = token\r\n        }\r\n}\r\n\r\n\r\n\r\nexport { socket,join,joinWithAuth};\r\n"]},"metadata":{},"sourceType":"module"}