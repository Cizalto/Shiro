{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Content from './Content';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport $ from 'jquery';\n\nfunction Body(props) {\n  _s();\n\n  const [msg, setMsg] = useState(\"\");\n  const [history, setHistory] = useState([{\n    content: \"Start of the history.\",\n    sender: 'server',\n    timeStamp: getTimestamp()\n  }]);\n  const [userInput, setInput] = useState();\n  const [userList, setUserList] = useState();\n  const [firstLaunch, setFirst] = useState(false);\n  const socket = props.soc;\n\n  function updateScroll() {\n    var element = document.getElementsByClassName(\"content\");\n    element.scrollTop = element.scrollHeight;\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect triggered\");\n\n    if (!props.active) {\n      socket.on(\"room-history\", dataObj => {\n        console.log(\"here's\", dataObj.content.name, \"history:\", dataObj.content.history); // let messageObj = {\n        //     userId: null,\n        //     content: message\n        // }\n\n        setHistory(historyCpy => [...historyCpy, ...dataObj.content.history]);\n      });\n      socket.on(\"update-userList\", userList => {\n        console.log(\"Here's the userList:\", userList);\n        setUserList(userList);\n        updateScroll();\n      });\n      socket.on('getroomlist', roomList => {\n        console.log(roomList);\n      });\n      socket.on(\"update\", msgObj => {\n        // let messageObj = {\n        //     userId: null,\n        //     content: message\n        // }\n        displayUpdate(msgObj);\n      });\n      socket.on(\"chat\", msgObj => {\n        console.log(\"Here's the message Obj:\", msgObj);\n        setHistory(historyCpy => [...historyCpy, msgObj]);\n        updateScroll();\n      });\n      setFirst(props.active);\n    }\n\n    function displayUpdate(msgObj) {\n      setHistory(historyCpy => [...historyCpy, msgObj]);\n    }\n  }, [history]);\n\n  function getTimestamp() {\n    const options = {\n      timeZone: \"Etc/GMT-1\",\n      hour12: false,\n      hour: \"numeric\",\n      minute: \"numeric\",\n      seconds: \"numeric\"\n    };\n    return new Date().toLocaleTimeString(\"fr-FR\", options);\n  }\n\n  function sendMsg() {\n    if (msg !== \"\") {\n      console.log(\"SendMsg:\", history);\n      socket.emit(\"post\", msg, 'general', getTimestamp());\n      setMsg(\"\");\n      userInput.focus();\n    }\n  }\n\n  function checkEnter(event) {\n    if (event.key === 'Enter') {\n      sendMsg();\n    } else {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n        className: \"feed\",\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          messages: history,\n          users: userList,\n          soc: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: input => {\n          setInput(input);\n        },\n        className: \"inputText\",\n        placeholder: \"Write your text here !\",\n        value: msg,\n        onKeyPress: event => checkEnter(event),\n        onChange: event => setMsg(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send btn\",\n        onClick: event => sendMsg(msg),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Body, \"nKD64ewe9pyt7MLQ+X2XZxS7gGc=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Body.js"],"names":["React","useState","useEffect","Content","ScrollableFeed","$","Body","props","msg","setMsg","history","setHistory","content","sender","timeStamp","getTimestamp","userInput","setInput","userList","setUserList","firstLaunch","setFirst","socket","soc","updateScroll","element","document","getElementsByClassName","scrollTop","scrollHeight","console","log","active","on","dataObj","name","historyCpy","roomList","msgObj","displayUpdate","options","timeZone","hour12","hour","minute","seconds","Date","toLocaleTimeString","sendMsg","emit","focus","checkEnter","event","key","input","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Content from './Content';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport $ from 'jquery';\n\nfunction Body(props) {\n    const [msg, setMsg] = useState(\"\");\n    const [history, setHistory] = useState([{content: \"Start of the history.\",sender: 'server', timeStamp: getTimestamp()}]);\n    const [userInput, setInput] = useState();\n    const [userList, setUserList] = useState();\n    const [firstLaunch, setFirst] = useState(false);\n    const socket = props.soc\n\n\n    function updateScroll(){\n        var element = document.getElementsByClassName(\"content\");\n        element.scrollTop = element.scrollHeight;\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect triggered\");\n        if (!props.active) {\n            socket.on(\"room-history\", (dataObj) =>{\n                console.log(\"here's\", dataObj.content.name,\"history:\",dataObj.content.history);\n                // let messageObj = {\n                //     userId: null,\n                //     content: message\n                // }\n                setHistory(historyCpy => ([...historyCpy, ...dataObj.content.history]))\n            })\n\n            socket.on(\"update-userList\", (userList) => {\n                console.log(\"Here's the userList:\",userList);\n                setUserList(userList)\n\n                updateScroll();\n            })\n\n            socket.on('getroomlist', (roomList) =>{\n                console.log(roomList);\n            })\n\n            socket.on(\"update\", (msgObj) =>{\n\n                // let messageObj = {\n                //     userId: null,\n                //     content: message\n                // }\n                displayUpdate(msgObj)\n            })\n\n            socket.on(\"chat\", (msgObj) => {\n                console.log(\"Here's the message Obj:\",msgObj);\n                setHistory(historyCpy => ([...historyCpy, msgObj]))\n\n                updateScroll();\n            })\n\n            setFirst(props.active)\n        }\n        function displayUpdate(msgObj){\n            setHistory(historyCpy => ([...historyCpy, msgObj]))\n        }\n\n\n    }, [history])\n    \n    function getTimestamp() {\n        const options = {\n            timeZone:\"Etc/GMT-1\",\n            hour12 : false,\n            hour:  \"numeric\",\n            minute: \"numeric\",seconds:\"numeric\"\n        }\n        return new Date().toLocaleTimeString(\"fr-FR\",options)\n    }\n\n    function sendMsg() {\n        if (msg !== \"\") {\n            console.log(\"SendMsg:\",history);\n\n\n            socket.emit(\"post\", msg, 'general', getTimestamp(),)\n            setMsg(\"\")\n            userInput.focus()\n        }\n    }\n\n    function checkEnter(event) {\n        if (event.key === 'Enter') {\n            sendMsg();\n        } else {\n\n        }\n    }\n\n    return(\n        <div className=\"frame\">\n            <div className=\"content\">\n                <ScrollableFeed className=\"feed\">\n                    <Content messages={history} users={userList} soc={socket}/>\n                </ScrollableFeed>\n            </div>\n            <div className=\"textBar\">\n                <input type=\"text\" ref={(input) => {setInput(input)}} className=\"inputText\" placeholder=\"Write your text here !\" value={msg} onKeyPress={event => checkEnter(event)} onChange={event => setMsg(event.target.value)}></input>\n                <button className=\"send btn\" onClick={event => sendMsg(msg)}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}