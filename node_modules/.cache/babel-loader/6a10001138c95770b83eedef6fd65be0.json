{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Content from './Content';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport $ from 'jquery';\n\nfunction Body(props) {\n  _s();\n\n  const [msg, setMsg] = useState(\"\");\n  const [history, setHistory] = useState([{\n    content: \"Start of the history.\"\n  }]);\n  const [userInput, setInput] = useState();\n  const [firstLaunch, setFirst] = useState(false);\n  const socket = props.soc;\n\n  function updateScroll() {\n    var element = document.getElementsByClassName(\"content\");\n    element.scrollTop = element.scrollHeight;\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect triggered\");\n\n    if (!firstLaunch) {\n      socket.on(\"update\", message => {\n        let messageObj = {\n          userId: null,\n          content: message\n        };\n        displayUpdate(messageObj);\n      });\n      socket.on(\"chat\", msgObj => {\n        console.log(\"Here's the message Obj:\", msgObj);\n        setHistory(historyCpy => [...historyCpy, msgObj]);\n        updateScroll();\n      });\n      setFirst(true);\n    }\n\n    function displayUpdate(msgObj) {\n      setHistory(historyCpy => [...historyCpy, msgObj]);\n    }\n  }, [history]);\n\n  function sendMsg() {\n    if (msg !== \"\") {\n      console.log(\"SendMsg:\", history);\n      let messageObj = {\n        userId: socket.id,\n        content: msg\n      };\n      socket.emit(\"post\", messageObj);\n      setMsg(\"\");\n      userInput.focus();\n    }\n  }\n\n  function checkEnter(event) {\n    if (event.key === 'Enter') {\n      sendMsg();\n    } else {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          messages: history,\n          soc: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: input => {\n          setInput(input);\n        },\n        className: \"inputText\",\n        placeholder: \"Write your text here !\",\n        value: msg,\n        onKeyPress: event => checkEnter(event),\n        onChange: event => setMsg(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send btn\",\n        onClick: event => sendMsg(msg),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Body, \"keWKe8TtaaloO+PBMPNPDJ3bH4Y=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Body.js"],"names":["React","useState","useEffect","Content","ScrollableFeed","$","Body","props","msg","setMsg","history","setHistory","content","userInput","setInput","firstLaunch","setFirst","socket","soc","updateScroll","element","document","getElementsByClassName","scrollTop","scrollHeight","console","log","on","message","messageObj","userId","displayUpdate","msgObj","historyCpy","sendMsg","id","emit","focus","checkEnter","event","key","input","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Content from './Content';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport $ from 'jquery';\n\nfunction Body(props) {\n    const [msg, setMsg] = useState(\"\");\n    const [history, setHistory] = useState([{content: \"Start of the history.\"}]);\n    const [userInput, setInput] = useState();\n    const [firstLaunch, setFirst] = useState(false);\n    const socket = props.soc\n\n\n    function updateScroll(){\n        var element = document.getElementsByClassName(\"content\");\n        element.scrollTop = element.scrollHeight;\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect triggered\");\n        if (!firstLaunch) {\n            socket.on(\"update\", (message) =>{\n\n                let messageObj = {\n                    userId: null,\n                    content: message\n                }\n                displayUpdate(messageObj)\n            })\n\n            socket.on(\"chat\", (msgObj) => {\n                console.log(\"Here's the message Obj:\",msgObj);\n                setHistory(historyCpy => ([...historyCpy, msgObj]))\n\n                updateScroll();\n            })\n\n            setFirst(true)\n        }\n        function displayUpdate(msgObj){\n            setHistory(historyCpy => ([...historyCpy, msgObj]))\n        }\n\n\n    }, [history])\n\n    function sendMsg() {\n        if (msg !== \"\") {\n            console.log(\"SendMsg:\",history);\n            let messageObj = {\n                userId: socket.id,\n                content: msg\n            }\n            socket.emit(\"post\", messageObj)\n            setMsg(\"\")\n            userInput.focus()\n        }\n    }\n\n    function checkEnter(event) {\n        if (event.key === 'Enter') {\n            sendMsg();\n        } else {\n\n        }\n    }\n\n    return(\n        <div className=\"frame\">\n            <div className=\"content\">\n                <ScrollableFeed>\n                    <Content messages={history} soc={socket}/>\n                </ScrollableFeed>\n            </div>\n            <div className=\"textBar\">\n                <input type=\"text\" ref={(input) => {setInput(input)}} className=\"inputText\" placeholder=\"Write your text here !\" value={msg} onKeyPress={event => checkEnter(event)} onChange={event => setMsg(event.target.value)}></input>\n                <button className=\"send btn\" onClick={event => sendMsg(msg)}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}