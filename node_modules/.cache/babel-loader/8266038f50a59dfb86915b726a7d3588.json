{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Content.js\";\nimport { get } from 'jquery';\nimport React from 'react';\n\nfunction Content(props) {\n  let socket = props.soc;\n\n  function msgStacker() {\n    //Créer un array d'array pour séparer chaque block de message\n    let msgArr = [];\n    let blockArr = [];\n    props.messages.map(function (msg, index) {\n      if (index > 0 && msg.sender !== props.messages[index - 1].sender) {\n        blockArr = [...blockArr, msgArr]; // console.log(\"update block\",blockArr);\n\n        msgArr = [];\n      } else {\n        msgArr = [...msgArr, msg];\n\n        if (index === props.messages.length - 1) {\n          blockArr = [...blockArr, msgArr];\n        }\n      }\n    });\n    console.log(\"return msgArr\", msgArr);\n    console.log(\"return block\", blockArr);\n    return blockArr; //Construction du block en jsx\n  } //{\n  // if (index > 0 && msg.sender != props.messages[index-1].sender) {\n  //     var content = (\n  //         <div>\n  //             <div className=\"msg-header\">{msg.userName}</div>\n  //             <div className=\"msg-body\">{msg.content}</div>\n  //         </div>\n  //     )\n  // } else if (index > 0 && msg.sender === props.messages[index-1].sender) {\n  //     var content = (\n  //         <div>\n  //             <div className=\"msg-body\">{msg.content}</div>\n  //         </div>\n  //     )\n  // } else if (index < props.messages.length-1 && msg.sender != props.messages[index+1].sender) {\n  //     var content = (\n  //         <div>\n  //             <div className=\"msg-body\">{msg.content}</div>\n  //             <div className=\"msg-footer\">Posted at {getTimestamp()}</div>\n  //         </div>\n  //     )\n  // } else if (index == props.messages.length-1) {\n  //     var content = (\n  //         <div>\n  //             <div className=\"msg-body\">{msg.content}</div>\n  //             <div className=\"msg-footer\">Posted at {getTimestamp()}</div>\n  //         </div>\n  //     )\n  // }\n\n\n  function msgSelector(msg, index, length) {\n    if (index === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row msg-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-user\",\n            children: props.users.content[msg.sender]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-role\",\n            children: \"/ Admin, Mod\\xE9rateur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-body\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    } else if (index === length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-footer\",\n          children: [\"Posted at \", msg.timeStamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-body\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg-body\",\n        children: msg.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return msgStacker().map(msgArr => {\n    msgArr.map(function (msg, index) {\n      let messageType;\n      console.log(\"msg sender\", msg.sender);\n      console.log(\"msg content\", msg.content);\n\n      if (msg.sender !== 'server') {\n        if (msg.sender === socket.id) {\n          messageType = \"message self\";\n        } else {\n          messageType = \"message other\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: messageType,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg\",\n            children: msgSelector(msg, index, msgArr.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this);\n      } else {\n        messageType = \"info\";\n        let infoType = \"serv \" + msg.type;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: messageType,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: infoType,\n            children: [msg.timeStamp, \" - \", msg.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }); // return props.messages.map(function(msg,index) {\n  //     let messageType;\n  //     if (msg.sender !== 'server') {\n  //         console.log(msg.sender);\n  //         if (msg.sender === socket.id) {\n  //             messageType = \"message self\";\n  //         } else {\n  //             messageType = \"message other\";\n  //         }\n  //         return (\n  //             <div className={messageType}>\n  //                 <div className=\"msg\">\n  //                     <div className=\"d-flex flex-row msg-header\">\n  //                         <div className=\"msg-user\">{props.users.content[msg.sender]}</div>\n  //                         <div className=\"msg-role\">/ Admin, Modérateur</div>\n  //                     </div>\n  //                     <div className=\"msg-body\">{msg.content}</div>\n  //                     <div className=\"msg-footer\">Posted at {msg.timeStamp}</div>\n  //                 </div>\n  //             </div>\n  //         )\n  //     } else {\n  //         messageType = \"info\";\n  //         let infoType = \"serv \"+msg.type;\n  //         return (\n  //             <div className={messageType}>\n  //                 <div className={infoType}>\n  //                     {msg.timeStamp} - {msg.content}\n  //                 </div>\n  //             </div>\n  //         )\n  //     }\n  // }\n}\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Content.js"],"names":["get","React","Content","props","socket","soc","msgStacker","msgArr","blockArr","messages","map","msg","index","sender","length","console","log","msgSelector","users","content","timeStamp","messageType","id","infoType","type"],"mappings":"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","sourcesContent":["import { get } from 'jquery';\nimport React from 'react';\n\nfunction Content(props) {\n    let socket = props.soc\n\n    function msgStacker() {\n        //Créer un array d'array pour séparer chaque block de message\n        let msgArr = [];\n        let blockArr= [];\n\n        props.messages.map(function(msg,index) {\n            if ((index > 0 && msg.sender !== props.messages[index-1].sender)) {\n                blockArr = [...blockArr, msgArr];\n                // console.log(\"update block\",blockArr);\n                msgArr = [];\n            } else {\n                msgArr = [...msgArr, msg];\n                if (index === props.messages.length-1) {\n                    blockArr = [...blockArr, msgArr];\n                }\n            }\n        })\n\n        console.log(\"return msgArr\",msgArr);\n        console.log(\"return block\",blockArr);\n        return blockArr;\n        //Construction du block en jsx\n    }\n        //{\n            // if (index > 0 && msg.sender != props.messages[index-1].sender) {\n            //     var content = (\n            //         <div>\n            //             <div className=\"msg-header\">{msg.userName}</div>\n            //             <div className=\"msg-body\">{msg.content}</div>\n            //         </div>\n            //     )\n            // } else if (index > 0 && msg.sender === props.messages[index-1].sender) {\n            //     var content = (\n            //         <div>\n            //             <div className=\"msg-body\">{msg.content}</div>\n            //         </div>\n            //     )\n            // } else if (index < props.messages.length-1 && msg.sender != props.messages[index+1].sender) {\n            //     var content = (\n            //         <div>\n            //             <div className=\"msg-body\">{msg.content}</div>\n            //             <div className=\"msg-footer\">Posted at {getTimestamp()}</div>\n            //         </div>\n            //     )\n            // } else if (index == props.messages.length-1) {\n            //     var content = (\n            //         <div>\n            //             <div className=\"msg-body\">{msg.content}</div>\n            //             <div className=\"msg-footer\">Posted at {getTimestamp()}</div>\n            //         </div>\n            //     )\n            // }\n\n    function msgSelector(msg,index, length) {\n        if (index === 0) {\n            return (\n                <div>\n                    <div className=\"d-flex flex-row msg-header\">\n                        <div className=\"msg-user\">{props.users.content[msg.sender]}</div>\n                        <div className=\"msg-role\">/ Admin, Modérateur</div>\n                    </div>\n                    <div className=\"msg-body\">{msg.content}</div>\n                </div>\n            )\n        } else if (index === length-1) {\n            return (\n                <div>\n                    <div className=\"msg-footer\">Posted at {msg.timeStamp}</div>\n                    <div className=\"msg-body\">{msg.content}</div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"msg-body\">{msg.content}</div>\n            )\n        }\n    }\n\n    return msgStacker().map((msgArr) => {\n        msgArr.map(function(msg,index) {\n            let messageType;\n            console.log(\"msg sender\",msg.sender);\n            console.log(\"msg content\",msg.content);\n            if (msg.sender !== 'server') {\n                if (msg.sender === socket.id) {\n                    messageType = \"message self\";\n                } else {\n                    messageType = \"message other\";\n                }\n                return (\n                    <div className={messageType}>\n                        <div className=\"msg\">\n                            {msgSelector(msg, index, msgArr.length)}\n                        </div>\n                    </div>\n                )\n            } else {\n                messageType = \"info\";\n                let infoType = \"serv \"+msg.type;\n                return (\n                    <div className={messageType}>\n                        <div className={infoType}>\n                            {msg.timeStamp} - {msg.content}\n                        </div>\n                    </div>\n                )\n            }\n        })\n    })\n\n        // return props.messages.map(function(msg,index) {\n        //     let messageType;\n        //     if (msg.sender !== 'server') {\n        //         console.log(msg.sender);\n        //         if (msg.sender === socket.id) {\n        //             messageType = \"message self\";\n        //         } else {\n        //             messageType = \"message other\";\n        //         }\n        //         return (\n        //             <div className={messageType}>\n        //                 <div className=\"msg\">\n        //                     <div className=\"d-flex flex-row msg-header\">\n        //                         <div className=\"msg-user\">{props.users.content[msg.sender]}</div>\n        //                         <div className=\"msg-role\">/ Admin, Modérateur</div>\n        //                     </div>\n        //                     <div className=\"msg-body\">{msg.content}</div>\n        //                     <div className=\"msg-footer\">Posted at {msg.timeStamp}</div>\n        //                 </div>\n        //             </div>\n        //         )\n        //     } else {\n        //         messageType = \"info\";\n        //         let infoType = \"serv \"+msg.type;\n        //         return (\n        //             <div className={messageType}>\n        //                 <div className={infoType}>\n        //                     {msg.timeStamp} - {msg.content}\n        //                 </div>\n        //             </div>\n        //         )\n        //     }\n        // }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}