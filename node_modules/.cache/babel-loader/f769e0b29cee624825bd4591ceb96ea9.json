{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Content.js\";\nimport { get } from 'jquery';\nimport React from 'react';\n\nfunction Content(props) {\n  let socket = props.soc;\n\n  function getTimestamp() {\n    const options = {\n      timeZone: \"Etc/GMT-1\",\n      hour12: false,\n      hour: \"numeric\",\n      minute: \"numeric\",\n      seconds: \"numeric\"\n    };\n    return new Date().toLocaleTimeString(\"fr-FR\", options);\n  }\n\n  function msgStacker(msg, index) {\n    if (index > 0 && msg.userId != props.messages[index - 1].userId) {\n      var content = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-header\",\n          children: [index, \" \", msg.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-body\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (index > 0 && msg.userId === props.messages[index - 1].userId) {\n      var content = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-body\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (index < props.messages.length - 1 && msg.userId != props.messages[index + 1].userId) {\n      var content = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-body\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-footer\",\n          children: [\"Posted at \", getTimestamp()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    }\n\n    let messageType;\n\n    if (msg.userId) {\n      if (msg.userId === socket.id) {\n        messageType = \"message self\";\n      } else {\n        messageType = \"message other\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: messageType,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    } else {\n      messageType = \"info\";\n      let infoType = \"serv\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: messageType,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: infoType,\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return props.messages.map(function (msg, index) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"msg\",\n      children: [msgStacker(msg, index), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Content.js"],"names":["get","React","Content","props","socket","soc","getTimestamp","options","timeZone","hour12","hour","minute","seconds","Date","toLocaleTimeString","msgStacker","msg","index","userId","messages","content","userName","length","messageType","id","infoType","map"],"mappings":"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","sourcesContent":["import { get } from 'jquery';\nimport React from 'react';\n\nfunction Content(props) {\n    let socket = props.soc\n\n    function getTimestamp() {\n        const options = {\n            timeZone:\"Etc/GMT-1\",\n            hour12 : false,\n            hour:  \"numeric\",\n            minute: \"numeric\",seconds:\"numeric\"\n        }\n\n        return new Date().toLocaleTimeString(\"fr-FR\",options)\n    }\n\n    function msgStacker(msg,index) {\n        if (index > 0 && msg.userId != props.messages[index-1].userId) {\n            var content = (\n                <div>\n                    <div className=\"msg-header\">{index} {msg.userName}</div>\n                    <div className=\"msg-body\">{msg.content}</div>\n                </div>\n            )\n        }\n\n        if (index > 0 && msg.userId === props.messages[index-1].userId) {\n            var content = (\n                <div>\n                    <div className=\"msg-body\">{msg.content}</div>\n                </div>\n            )\n        }\n\n        if (index < props.messages.length-1 && msg.userId != props.messages[index+1].userId) {\n            var content = (\n                <div>\n                    <div className=\"msg-body\">{msg.content}</div>\n                    <div className=\"msg-footer\">Posted at {getTimestamp()}</div>\n                </div>\n            )\n        }\n\n        let messageType;\n        if (msg.userId) {\n            if (msg.userId === socket.id) {\n                messageType = \"message self\";\n            } else {\n                messageType = \"message other\";\n            }\n            return (\n                <div className={messageType}>\n                    <div>\n                        {content}\n                    </div>\n                </div>\n            )\n        } else {\n            messageType = \"info\";\n            let infoType = \"serv\";\n            return (\n                <div className={messageType}>\n                    <div className={infoType}>\n                        {msg.content}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    return props.messages.map(function(msg,index) {\n        (\n            <div className=\"msg\">\n                {msgStacker(msg,index)};\n            </div>\n        )\n    })\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}