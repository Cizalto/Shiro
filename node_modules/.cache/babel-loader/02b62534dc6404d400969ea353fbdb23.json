{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Content.js\";\nimport { get } from 'jquery';\nimport React from 'react';\n\nfunction Content(props) {\n  let socket = props.soc;\n\n  function msgStacker() {\n    let blockArr = [[]];\n    let indexBlock = 0;\n    props.messages.map(function (msg, index) {\n      if (index > 0 && msg.sender !== props.messages[index - 1].sender) {\n        blockArr = [...blockArr, [msg]];\n        indexBlock++;\n      } else {\n        blockArr[indexBlock] = [...blockArr[indexBlock], msg];\n      }\n    });\n    return blockArr;\n  }\n\n  function msgSelector(msg, index, length) {\n    if (index === 0) {\n      if (length === 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row msg-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-user\",\n              children: props.users.content[msg.sender]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-role\",\n              children: \"/ Admin, Mod\\xE9rateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-body\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-footer\",\n            children: [\"Posted at \", msg.timeStamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row msg-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-user\",\n              children: props.users.content[msg.sender]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-role\",\n              children: \"/ Admin, Mod\\xE9rateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-body\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this);\n      }\n    } else if (index === length - 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-body\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-footer\",\n          children: [\"Posted at \", msg.timeStamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg-body\",\n        children: msg.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function msgChecker(msgArr) {\n    return msgArr.map(function (msg, index) {\n      let messageType;\n      console.log(\"msg sender\", msg.sender);\n\n      if (msg.sender !== 'server') {\n        console.log(msg.sender);\n\n        if (msg.sender === socket.id) {\n          messageType = \"message self\";\n        } else {\n          messageType = \"message other\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: messageType,\n          children: msgSelector(msg, index, msgArr.length)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this);\n      } else {\n        messageType = \"info\";\n        let infoType = \"serv \" + msg.type;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: messageType,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: infoType,\n            children: [msg.timeStamp, \" - \", msg.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n  return msgStacker().map(function (msgArr) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: msgChecker(msgArr)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  });\n}\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Content.js"],"names":["get","React","Content","props","socket","soc","msgStacker","blockArr","indexBlock","messages","map","msg","index","sender","msgSelector","length","users","content","timeStamp","msgChecker","msgArr","messageType","console","log","id","infoType","type"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,MAAIC,MAAM,GAAGD,KAAK,CAACE,GAAnB;;AAEA,WAASC,UAAT,GAAsB;AAClB,QAAIC,QAAQ,GAAE,CAAC,EAAD,CAAd;AACA,QAAIC,UAAU,GAAG,CAAjB;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmB,UAASC,GAAT,EAAaC,KAAb,EAAoB;AACnC,UAAKA,KAAK,GAAG,CAAR,IAAaD,GAAG,CAACE,MAAJ,KAAeV,KAAK,CAACM,QAAN,CAAeG,KAAK,GAAC,CAArB,EAAwBC,MAAzD,EAAiE;AAC7DN,QAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc,CAACI,GAAD,CAAd,CAAX;AACAH,QAAAA,UAAU;AACb,OAHD,MAGM;AACFD,QAAAA,QAAQ,CAACC,UAAD,CAAR,GAAuB,CAAC,GAAGD,QAAQ,CAACC,UAAD,CAAZ,EAA0BG,GAA1B,CAAvB;AACH;AACJ,KAPD;AASA,WAAOJ,QAAP;AACH;;AAED,WAASO,WAAT,CAAqBH,GAArB,EAAyBC,KAAzB,EAA+BG,MAA/B,EAAuC;AACnC,QAAIH,KAAK,KAAK,CAAd,EAAiB;AACb,UAAIG,MAAM,KAAK,CAAf,EAAkB;AACd,4BACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,wBAA2BZ,KAAK,CAACa,KAAN,CAAYC,OAAZ,CAAoBN,GAAG,CAACE,MAAxB;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,sBAA2BF,GAAG,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,qCAAuCN,GAAG,CAACO,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXD,MAWO;AACH,4BACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,wBAA2Bf,KAAK,CAACa,KAAN,CAAYC,OAAZ,CAAoBN,GAAG,CAACE,MAAxB;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,sBAA2BF,GAAG,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH;AACJ,KAvBD,MAuBO,IAAIL,KAAK,KAAKG,MAAM,GAAC,CAArB,EAAwB;AAC3B,0BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BJ,GAAG,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,mCAAuCN,GAAG,CAACO,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPM,MAOA;AACH,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BP,GAAG,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AAED,WAASE,UAAT,CAAoBC,MAApB,EAA4B;AACxB,WAAOA,MAAM,CAACV,GAAP,CAAW,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACnC,UAAIS,WAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBZ,GAAG,CAACE,MAA7B;;AACA,UAAIF,GAAG,CAACE,MAAJ,KAAe,QAAnB,EAA6B;AACzBS,QAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACE,MAAhB;;AACA,YAAIF,GAAG,CAACE,MAAJ,KAAeT,MAAM,CAACoB,EAA1B,EAA8B;AAC1BH,UAAAA,WAAW,GAAG,cAAd;AACH,SAFD,MAEO;AACHA,UAAAA,WAAW,GAAG,eAAd;AACH;;AACD,4BACI;AAAK,UAAA,SAAS,EAAEA,WAAhB;AAAA,oBACSP,WAAW,CAACH,GAAD,EAAMC,KAAN,EAAaQ,MAAM,CAACL,MAApB;AADpB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAZD,MAYO;AACHM,QAAAA,WAAW,GAAG,MAAd;AACA,YAAII,QAAQ,GAAG,UAAQd,GAAG,CAACe,IAA3B;AACA,4BACI;AAAK,UAAA,SAAS,EAAEL,WAAhB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAEI,QAAhB;AAAA,uBACKd,GAAG,CAACO,SADT,SACuBP,GAAG,CAACM,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;AACJ,KA1BM,CAAP;AA2BH;;AAED,SAAOX,UAAU,GAAGI,GAAb,CAAiB,UAASU,MAAT,EAAiB;AACrC,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKD,UAAU,CAACC,MAAD;AADf;AAAA;AAAA;AAAA;AAAA,YADA;AAKH,GANM,CAAP;AAOH;;KA7FQlB,O;AA+FT,eAAeA,OAAf","sourcesContent":["import { get } from 'jquery';\nimport React from 'react';\n\nfunction Content(props) {\n    let socket = props.soc\n\n    function msgStacker() {\n        let blockArr= [[]];\n        let indexBlock = 0;\n        props.messages.map(function(msg,index) {\n            if ((index > 0 && msg.sender !== props.messages[index-1].sender)){\n                blockArr = [...blockArr, [msg]];\n                indexBlock++\n            } else{\n                blockArr[indexBlock] = [...blockArr[indexBlock], msg];\n            }\n        })\n\n        return blockArr;\n    }\n\n    function msgSelector(msg,index,length) {\n        if (index === 0) {\n            if (length === 1) {\n                return (\n                    <div>\n                        <div className=\"d-flex flex-row msg-header\">\n                            <div className=\"msg-user\">{props.users.content[msg.sender]}</div>\n                            <div className=\"msg-role\">/ Admin, Modérateur</div>\n                        </div>\n                        <div className=\"msg-body\">{msg.content}</div>\n                        <div className=\"msg-footer\">Posted at {msg.timeStamp}</div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <div className=\"d-flex flex-row msg-header\">\n                            <div className=\"msg-user\">{props.users.content[msg.sender]}</div>\n                            <div className=\"msg-role\">/ Admin, Modérateur</div>\n                        </div>\n                        <div className=\"msg-body\">{msg.content}</div>\n                    </div>\n                )\n            }\n        } else if (index === length-1) {\n            return (\n                <div>\n                    <div className=\"msg-body\">{msg.content}</div>\n                    <div className=\"msg-footer\">Posted at {msg.timeStamp}</div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"msg-body\">{msg.content}</div>\n            )\n        }\n    }\n\n    function msgChecker(msgArr) {\n        return msgArr.map(function(msg, index) {\n            let messageType;\n            console.log(\"msg sender\",msg.sender);\n            if (msg.sender !== 'server') {\n                console.log(msg.sender);\n                if (msg.sender === socket.id) {\n                    messageType = \"message self\";\n                } else {\n                    messageType = \"message other\";\n                }\n                return (\n                    <div className={messageType}>\n                            {msgSelector(msg, index, msgArr.length)}\n                    </div>\n                )\n            } else {\n                messageType = \"info\";\n                let infoType = \"serv \"+msg.type;\n                return (\n                    <div className={messageType}>\n                        <div className={infoType}>\n                            {msg.timeStamp} - {msg.content}\n                        </div>\n                    </div>\n                )\n            }\n        })\n    }\n\n    return msgStacker().map(function(msgArr) {\n        return (\n        <div className=\"msg\">\n            {msgChecker(msgArr)}\n        </div>\n        )\n    })\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}