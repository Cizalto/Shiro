{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Channels.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Body from './Body';\n\nfunction Channels(props) {\n  _s();\n\n  let socket = props.soc;\n  const [currentChannel, setCurrentChannel] = useState('Général');\n  const [activeChannel, setActiveChannel] = useState([false, true]);\n  const [userList, setUserList] = useState(props.userList);\n  var channelList = [{\n    label: 'Général',\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-content\",\n      children: /*#__PURE__*/_jsxDEV(Body, {\n        soc: socket,\n        active: activeChannel[0],\n        history: props.history,\n        userList: props.userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)\n  }, {\n    label: 'Channel 2',\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-content\",\n      children: /*#__PURE__*/_jsxDEV(Body, {\n        soc: socket,\n        active: activeChannel[1],\n        history: props.history,\n        userList: props.userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }];\n\n  function addChannel(label) {\n    var newChannel = {\n      label: label,\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    };\n    channelList = [...channelList, newChannel];\n  }\n\n  function updateChannel(label) {\n    setCurrentChannel(label);\n    channelList.map((channel, index) => {\n      let activeChannel_cpy = activeChannel;\n\n      if (channel.label === label) {\n        activeChannel_cpy[index] = false;\n      } else {\n        activeChannel_cpy[index] = true;\n      }\n\n      setActiveChannel(activeChannel_cpy);\n      return null;\n    });\n  }\n\n  function removeChannel() {}\n\n  function displayConnectedUsers() {\n    return userList.content.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Username\",\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channels\",\n      children: [channelList.map((channel, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateChannel(channel.label),\n        className: channel.label === currentChannel ? 'btn channel active' : 'btn channel',\n        children: channel.label\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn add channel\",\n        onClick: addChannel(\"Chan oni\"),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), channelList.map((channel, i) => {\n      if (channel.label === currentChannel) {\n        console.log(\"activeChannel[0]: \", activeChannel[0]);\n        console.log(\"activeChannel[1]: \", activeChannel[1]);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column flex-grow-1\",\n            children: channel.content\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Connected Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userlist\",\n              children: displayConnectedUsers()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this);\n      } else {\n        return null;\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Channels, \"li25X++4fzQSYabkpPw/7EfXZtg=\");\n\n_c = Channels;\nexport default Channels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channels\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/epitech/IRC/T-JSF-600-LYN-6-1-IRCjavascript-antoine.dupuis/irc/src/components/Channels.js"],"names":["React","useState","Body","Channels","props","socket","soc","currentChannel","setCurrentChannel","activeChannel","setActiveChannel","userList","setUserList","channelList","label","content","history","addChannel","newChannel","updateChannel","map","channel","index","activeChannel_cpy","removeChannel","displayConnectedUsers","user","i","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Body from './Body';\n\nfunction Channels(props) {\n    let socket = props.soc;\n\n    const [currentChannel, setCurrentChannel] = useState('Général');\n    const [activeChannel, setActiveChannel] = useState([false,true]);\n    const [userList, setUserList] = useState(props.userList);\n\n    var channelList = [\n        {\n            label: 'Général',\n            content: (\n                <div className=\"channel-content\">\n                    <Body soc={socket} active={activeChannel[0]} history={props.history} userList={props.userList}/>\n                </div>\n            )\n        },\n        {\n            label: 'Channel 2',\n            content: (\n                <div className=\"channel-content\">\n                    <Body soc={socket} active={activeChannel[1]} history={props.history} userList={props.userList}/>\n                </div>\n            )\n        }\n    ];\n\n    function addChannel(label) {\n        var newChannel = {\n            label: label,\n            content: (\n                <div className=\"channel-content\">\n                    <p>{label}</p>\n                </div>\n            )\n        };\n\n        channelList = [...channelList, newChannel];\n    }\n\n    function updateChannel(label) {\n        setCurrentChannel(label);\n\n        channelList.map((channel, index) => {\n            let activeChannel_cpy = activeChannel;\n            if (channel.label === label) {\n                activeChannel_cpy[index] = false;\n            } else {\n                activeChannel_cpy[index] = true;\n            }\n            setActiveChannel(activeChannel_cpy);\n            return null\n        })\n    }\n\n    function removeChannel() {\n\n    }\n\n    function displayConnectedUsers() {\n        return userList.content.map((user) => {\n            return (\n                <div className=\"Username\">\n                    {user}\n                </div>\n            )\n        })\n    }\n\n    return(\n        <div className=\"d-flex flex-column flex-grow-1\">\n            <div className=\"channels\">\n                {\n                    channelList.map((channel, i) => (\n                        <button\n                            key={i}\n                            onClick={() => updateChannel(channel.label)}\n                            className={(channel.label === currentChannel) ? 'btn channel active' : 'btn channel'}>\n                                {channel.label}\n                        </button>\n                    ))\n                }\n                <button className=\"btn add channel\" onClick={addChannel(\"Chan oni\")}>\n                    +\n                </button>\n            </div>\n\n            {\n                channelList.map((channel, i) => {\n\n                    if (channel.label === currentChannel) {\n                        console.log(\"activeChannel[0]: \",activeChannel[0]);\n                        console.log(\"activeChannel[1]: \",activeChannel[1]);\n                        return (\n                            <div className=\"frame\">\n                                <div className=\"d-flex flex-column flex-grow-1\" key={i}>\n                                    {channel.content}\n                                </div>\n                                <div className=\"menu\">\n                                    <div className=\"title\">\n                                        Connected Users\n                                    </div>\n                                    <div className=\"userlist\">\n                                        {displayConnectedUsers()}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return null;\n                    }\n                })\n            }\n        </div>\n    );\n}\n\nexport default Channels;"]},"metadata":{},"sourceType":"module"}