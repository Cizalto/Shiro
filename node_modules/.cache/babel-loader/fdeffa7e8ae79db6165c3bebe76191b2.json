{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cizalto/Bureau/git/Personel/Shiro/Shiro/src/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Channels from './components/Channels';\nimport Body from './components/Body';\nimport JoinModal from './components/JoinModal';\nimport { socket, join, joinWithAuth } from './API/Api'; // class Main extends React.Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {name: null};\n//   }\n\nfunction Main(props) {\n  _s();\n\n  const [name, setName] = useState(null);\n  const [loggedIn, setLog] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const [history, setHistory] = useState([{\n    content: \"Welcome to Général.\",\n    sender: 'server',\n    timeStamp: getTimestamp()\n  }]);\n  const [channels, setChannels] = useState({\n    channelList: ['général'],\n    général: {\n      room: 'général',\n      history: [{\n        content: \"Welcome to Général.\",\n        sender: 'server',\n        timeStamp: getTimestamp()\n      }]\n    }\n  });\n  const [userInput, setInput] = useState();\n  const [userList, setUserList] = useState();\n  const [firstLaunch, setFirst] = useState(false);\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  function updateScroll() {\n    var element = document.getElementsByClassName(\"content\");\n    element.scrollTop = element.scrollHeight;\n  }\n\n  function getTimestamp() {\n    const options = {\n      timeZone: \"Etc/GMT-1\",\n      hour12: false,\n      hour: \"numeric\",\n      minute: \"numeric\",\n      seconds: \"numeric\"\n    };\n    return new Date().toLocaleTimeString(\"fr-FR\", options);\n  } // ---------------------------------------------------------------|| Functions to display messages and get Infos ||\n\n\n  useEffect(() => {\n    console.log(\"useEffect triggered\");\n\n    if (!firstLaunch && loggedIn) {\n      socket.on(\"room-history\", dataObj => {\n        console.log(\"here's\", dataObj.content.name, \"history:\", dataObj.content.history);\n        let channels_cpy = channels;\n\n        if (dataObj.content.name == 'général') {\n          channels_cpy.channelList = [dataObj.content.name];\n        } else if (channels_cpy.channelList.find(element => element = dataObj.content.name) !== dataObj.content.name) {\n          channels_cpy.channelList = [...channels_cpy.channelList, dataObj.content.name];\n        }\n\n        channels_cpy[dataObj.content.name] = {};\n        channels_cpy[dataObj.content.name].room = dataObj.content.name;\n        channels_cpy[dataObj.content.name].history = [{\n          content: \"Welcome to \" + dataObj.content.name,\n          sender: 'server',\n          timeStamp: getTimestamp()\n        }, ...dataObj.content.history];\n        channels_cpy[dataObj.content.name].userList = { ...dataObj.content.userList\n        };\n        setChannels(channels_cpy);\n        setHistory(historyCpy => [...historyCpy, ...dataObj.content.history]);\n        console.log('====================================');\n        console.log(\"Channel object at start:\", channels);\n        console.log('====================================');\n      }); // socket.on(\"update-channel\", (channel) => {\n      //     let channels_cpy = channels\n      //     channels_cpy.channelList = [...channels_cpy.channelList, channel.room]\n      //     channels_cpy[channel.room] = {}\n      //     channels_cpy[channel.room].room = channel.room \n      //     channels_cpy[channel.room].history = channel.history\n      //     channels_cpy[channel.room].userList = channel.userList\n      //     setChannels(channels_cpy)\n      //     console.log(\"Here's the\",channel.room+\" history:\",channel.history);\n      //     console.log('====================================');\n      //     console.log(\"Channels:\", channels);\n      //     console.log('====================================');\n      // })\n\n      socket.on(\"update-channel-users\", channel => {\n        console.log(\"This is the channel wich got a userList update:\", channel);\n        let channels_cpy = channels;\n        channels_cpy[channel.name].userList = channel.userList;\n        setChannels(channels_cpy);\n        console.log(\"Here's the\", channel.name + \" userList:\", channel.userList);\n        console.log('====================================');\n        console.log(\"Channels:\", channels);\n        console.log('====================================');\n      });\n      socket.on('quit-channel', channelObj => {\n        let channels_cpy = channels;\n        channels_cpy.channelList.splice(channels_cpy.channelList.findIndex(element => element === channelObj.content), 1);\n        delete channels_cpy[channelObj.content];\n        forceUpdate();\n      });\n      socket.on(\"update-userList\", userList => {\n        console.log(\"Here's the userList:\", userList);\n        setUserList(userList);\n        updateScroll();\n      });\n      socket.on('getroomlist', roomList => {\n        console.log(roomList);\n      });\n      socket.on(\"update\", msgObj => {\n        displayUpdate(msgObj);\n      });\n      socket.on(\"chat\", msgObj => {\n        console.log(\"Here's the message Obj:\", msgObj);\n        let channels_cpy = channels;\n        channels_cpy[msgObj.room].history = [...channels_cpy[msgObj.room].history, msgObj];\n        setChannels(channels_cpy);\n        setHistory(historyCpy => [...historyCpy, msgObj]);\n        updateScroll();\n      });\n      socket.on(\"rick\", () => {\n        var audio = new Audio('http://epitech.justmeandi.net/music/music.mp3');\n        audio.play();\n      });\n      setFirst(true);\n    }\n\n    function displayUpdate(msgObj) {\n      console.log(\"Here's the message Obj:\", msgObj);\n      let room;\n\n      if (msgObj.room !== null && msgObj.room !== undefined) {\n        room = msgObj.room;\n      } else {\n        room = 'général';\n      }\n\n      console.log(\"The room i'm gonna display the message is\", room);\n      let channels_cpy = channels;\n      channels_cpy[room].history = [...channels_cpy[room].history, msgObj];\n      setChannels(channels_cpy);\n      console.log(\"Here's the channels:\", channels);\n      setHistory(historyCpy => [...historyCpy, msgObj]);\n    }\n  }, [channels, firstLaunch, history, loggedIn]); // ---------------------------------------------------------------|| End ||\n  // ---------------------------------------------------------------|| Functions to join the server ||\n\n  function joinServer(userName, room) {\n    console.info(\"Attempting to Join the chat as\", userName);\n    setName(userName);\n    join(userName, room);\n    setLog(true);\n  }\n\n  function joinServerWithAuth(userName, password, room) {\n    console.info(\"Attempting to Join the chat as\", userName);\n    setName(userName);\n    joinWithAuth(userName, password);\n    socket.once(\"success\", () => {\n      console.log(\"-- Connection successful --\");\n      setLog(true);\n    });\n    socket.once(\"noaccount\", () => {\n      console.log(\"-- No account found --\");\n      socket.disconnect();\n    });\n    console.log(userName);\n    socket.emit('first-join', userName, room);\n  } // ---------------------------------------------------------------|| End ||\n\n\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Channels, {\n        soc: socket,\n        history: history,\n        userList: userList,\n        channels: channels,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(JoinModal, {\n        joinAs: joinServer,\n        joinWithAuth: joinServerWithAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(Main, \"xm8ZMn7hIlLdmVr3YCCbwIsIyaE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/cizalto/Bureau/git/Personel/Shiro/Shiro/src/Main.js"],"names":["React","useState","useEffect","Channels","Body","JoinModal","socket","join","joinWithAuth","Main","props","name","setName","loggedIn","setLog","msg","setMsg","history","setHistory","content","sender","timeStamp","getTimestamp","channels","setChannels","channelList","général","room","userInput","setInput","userList","setUserList","firstLaunch","setFirst","updateState","forceUpdate","useCallback","updateScroll","element","document","getElementsByClassName","scrollTop","scrollHeight","options","timeZone","hour12","hour","minute","seconds","Date","toLocaleTimeString","console","log","on","dataObj","channels_cpy","find","historyCpy","channel","channelObj","splice","findIndex","roomList","msgObj","displayUpdate","audio","Audio","play","undefined","joinServer","userName","info","joinServerWithAuth","password","once","disconnect","emit"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport './App.css';\nimport Channels from './components/Channels';\nimport Body from './components/Body';\nimport JoinModal from './components/JoinModal';\nimport { socket,join,joinWithAuth} from './API/Api';\n\n\n// class Main extends React.Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {name: null};\n//   }\n\nfunction Main (props){\n  const [name, setName] = useState(null);\n  const [loggedIn, setLog] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const [history, setHistory] = useState([{content: \"Welcome to Général.\",sender: 'server', timeStamp: getTimestamp()}]);\n  const [channels, setChannels] = useState({channelList:['général'],général:{room: 'général',history:[{content: \"Welcome to Général.\",sender: 'server', timeStamp: getTimestamp()}]}});\n  const [userInput, setInput] = useState();\n  const [userList, setUserList] = useState();\n  const [firstLaunch, setFirst] = useState(false);\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  function updateScroll(){\n    var element = document.getElementsByClassName(\"content\");\n    element.scrollTop = element.scrollHeight;\n  }\n\n  function getTimestamp() {\n    const options = {\n        timeZone:\"Etc/GMT-1\",\n        hour12 : false,\n        hour:  \"numeric\",\n        minute: \"numeric\",seconds:\"numeric\"\n    }\n    return new Date().toLocaleTimeString(\"fr-FR\",options)\n}\n\n  // ---------------------------------------------------------------|| Functions to display messages and get Infos ||\n  useEffect(() => {\n    console.log(\"useEffect triggered\");\n    if (!firstLaunch && loggedIn) {\n        socket.on(\"room-history\", (dataObj) =>{\n            console.log(\"here's\", dataObj.content.name,\"history:\",dataObj.content.history);\n            let channels_cpy = channels\n            if (dataObj.content.name == 'général') {\n              channels_cpy.channelList = [dataObj.content.name]\n            }else if (channels_cpy.channelList.find(element => element = dataObj.content.name) !== dataObj.content.name ){\n              channels_cpy.channelList = [...channels_cpy.channelList,dataObj.content.name]\n            }\n            channels_cpy[dataObj.content.name] = {}\n            channels_cpy[dataObj.content.name].room = dataObj.content.name \n            channels_cpy[dataObj.content.name].history = [{content: \"Welcome to \"+dataObj.content.name,sender: 'server', timeStamp: getTimestamp()},...dataObj.content.history]\n            channels_cpy[dataObj.content.name].userList = {...dataObj.content.userList}\n            setChannels(channels_cpy)\n            setHistory(historyCpy => ([...historyCpy, ...dataObj.content.history]))\n            console.log('====================================');\n            console.log(\"Channel object at start:\",channels);\n            console.log('====================================');\n        })\n\n        // socket.on(\"update-channel\", (channel) => {\n        //     let channels_cpy = channels\n        //     channels_cpy.channelList = [...channels_cpy.channelList, channel.room]\n        //     channels_cpy[channel.room] = {}\n        //     channels_cpy[channel.room].room = channel.room \n        //     channels_cpy[channel.room].history = channel.history\n        //     channels_cpy[channel.room].userList = channel.userList\n        //     setChannels(channels_cpy)\n        //     console.log(\"Here's the\",channel.room+\" history:\",channel.history);\n        //     console.log('====================================');\n        //     console.log(\"Channels:\", channels);\n        //     console.log('====================================');\n        // })\n\n        socket.on(\"update-channel-users\", (channel) => {\n          console.log(\"This is the channel wich got a userList update:\",channel);\n            let channels_cpy = channels\n            channels_cpy[channel.name].userList = channel.userList\n            setChannels(channels_cpy)\n            console.log(\"Here's the\",channel.name+\" userList:\",channel.userList);\n            console.log('====================================');\n            console.log(\"Channels:\", channels);\n            console.log('====================================');\n        })\n\n        socket.on('quit-channel', (channelObj) => {\n          let channels_cpy = channels\n          channels_cpy.channelList.splice(channels_cpy.channelList.findIndex((element) => element === channelObj.content), 1)\n          delete channels_cpy[channelObj.content]\n          forceUpdate();\n        })\n\n        socket.on(\"update-userList\", (userList) => {\n          console.log(\"Here's the userList:\",userList);\n          setUserList(userList)\n\n          updateScroll();\n        })\n\n        socket.on('getroomlist', (roomList) =>{\n            console.log(roomList);\n        })\n\n        socket.on(\"update\", (msgObj) =>{\n            displayUpdate(msgObj)\n        })\n\n        socket.on(\"chat\", (msgObj) => {\n            console.log(\"Here's the message Obj:\",msgObj);\n            let channels_cpy = channels\n            channels_cpy[msgObj.room].history = [...channels_cpy[msgObj.room].history, msgObj]\n            setChannels(channels_cpy)\n            setHistory(historyCpy => ([...historyCpy, msgObj]))\n\n            updateScroll();\n        })\n\n        socket.on(\"rick\", () => {\n          var audio = new Audio('http://epitech.justmeandi.net/music/music.mp3');\n          audio.play();\n      })\n\n        setFirst(true)\n    }\n    function displayUpdate(msgObj){\n        console.log(\"Here's the message Obj:\",msgObj);\n        let room\n        if (msgObj.room !== null && msgObj.room !== undefined) {\n          room = msgObj.room\n        } else {\n          room = 'général'\n        }\n        console.log(\"The room i'm gonna display the message is\", room);\n        let channels_cpy = channels\n        channels_cpy[room].history = [...channels_cpy[room].history, msgObj]\n        setChannels(channels_cpy)\n        console.log(\"Here's the channels:\",channels);\n        setHistory(historyCpy => ([...historyCpy, msgObj]))\n    }\n\n\n}, [channels, firstLaunch, history, loggedIn])\n  // ---------------------------------------------------------------|| End ||\n\n\n  // ---------------------------------------------------------------|| Functions to join the server ||\n  function joinServer (userName, room){\n    console.info(\"Attempting to Join the chat as\", userName);\n    setName(userName)\n    join(userName, room)\n    setLog(true);\n  }\n  \n  function joinServerWithAuth(userName, password, room){\n    console.info(\"Attempting to Join the chat as\", userName);\n    setName(userName)\n    joinWithAuth(userName,password)\n    socket.once(\"success\", () => {\n            console.log(\"-- Connection successful --\");\n            setLog(true);\n    })\n    socket.once(\"noaccount\", () => {\n            console.log(\"-- No account found --\")\n            socket.disconnect()\n    })\n    console.log(userName);\n    socket.emit('first-join',userName, room)\n  }\n\n  // ---------------------------------------------------------------|| End ||\n\n\n      if (loggedIn){\n        return (\n          <div className=\"main\">\n            <Channels soc={socket} history={history} userList={userList} channels={channels} loggedIn={loggedIn}/>\n          </div>\n        )\n      }else {\n        return (\n          <div className=\"main\">\n            <JoinModal joinAs={joinServer} joinWithAuth={joinServerWithAuth}/>\n          </div>\n        )\n      }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}